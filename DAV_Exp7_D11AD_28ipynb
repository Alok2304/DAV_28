{"cells":[{"cell_type":"markdown","metadata":{"id":"6-jAhpp1f-Hv"},"source":["# Data Analytics Visualization Experiment 7\n","---\n","**ALOK** **KALE**\n","\n","**D11AD_28**\n","\n","**AIM**: Perform the steps involved in Text Analytics in Python & R.\n","\n","**OBJECTIVE**: Design Text Analytics Application on a given data set.\n","\n","# Tasks to be performed\n","---\n","1. Explore Top-5 Text Analytics Libraries in Python (w.r.t Features & Applications)\n","\n","2. Explore Top-5 Text Analytics Libraries in R (w.r.t Features & Applications)\n","\n","3. Perform the following experiments using Python & R\n","\n","* Tokenization (Sentence & Word)\n","* Frequency Distribution\n","* Remove stopwords & punctuations\n","* Lexicon Normalization (Stemming, Lemmatization)\n","* Part of Speech tagging\n","* Named Entity Recognization\n","* Scrape data from a website\n"]},{"cell_type":"markdown","metadata":{"id":"aKQmLycph4PY"},"source":["**1.Top 5 Text Analytics Libraries in Python**\n","\n","---"]},{"cell_type":"markdown","metadata":{"id":"C_d33TiFiUs6"},"source":["**NLTK (Natural Language Toolkit):**\n","\n","> NLTK is a comprehensive library for natural language processing (NLP) in Python.\n","It provides tools for tokenization, stemming, tagging, parsing, and semantic reasoning. NLTK also includes a variety of corpora and lexical resources for training and testing NLP models.\n","Widely used for tasks such as sentiment analysis, named entity recognition, text classification, and more.\n","\n","**Scattertext:**\n","\n",">Scattertext is a Python library for visualizing differences between text corpora.\n","It allows for the comparison of word frequencies and significance between categories in a visually appealing manner.\n","Scattertext is particularly useful for exploring linguistic variation and understanding how language is used differently across categories.\n","Commonly used in applications such as analyzing political speeches, product reviews, and social media discussions.\n","\n","**spaCy:**\n","\n",">spaCy is a modern and efficient library for NLP in Python designed for production use.\n","It offers pre-trained models for various languages and tasks, including named entity recognition, part-of-speech tagging, and dependency parsing.\n","spaCy's processing pipeline is highly optimized for speed and efficiency.\n","It provides easy integration with deep learning frameworks like TensorFlow and PyTorch.\n","Widely used for tasks such as information extraction, text summarization, and entity linking.\n","\n","**TextBlob:**\n","\n",">TextBlob is a simple and intuitive library for text processing and sentiment analysis in Python.\n","It provides an easy-to-use API for common NLP tasks such as part-of-speech tagging, noun phrase extraction, and sentiment analysis.\n","TextBlob includes built-in sentiment analysis models trained on large datasets.\n","It supports multiple languages and can be extended with custom models and corpora.\n","Commonly used for tasks such as social media sentiment analysis, opinion mining, and text classification.\n","\n","**scikit-learn:**\n","\n",">scikit-learn is a widely-used machine learning library in Python that includes tools for text analysis.\n","It provides implementations of popular machine learning algorithms for text classification, clustering, and dimensionality reduction.\n","scikit-learn offers feature extraction techniques such as bag-of-words, TF-IDF, and word embeddings.\n","It supports integration with other libraries like NLTK and spaCy for advanced text processing tasks.\n","Commonly used for tasks such as document classification, spam detection, and sentiment analysis, often in combination with other libraries."]},{"cell_type":"markdown","metadata":{"id":"pG25oJInmCWZ"},"source":["**Python**"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"W20pELK5mklG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708450895721,"user_tz":-330,"elapsed":6876,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"d745ad73-2b90-46b1-fef7-a6a7c7dd770b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: nltk in /usr/local/lib/python3.10/dist-packages (3.8.1)\n","Requirement already satisfied: click in /usr/local/lib/python3.10/dist-packages (from nltk) (8.1.7)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.10/dist-packages (from nltk) (1.3.2)\n","Requirement already satisfied: regex>=2021.8.3 in /usr/local/lib/python3.10/dist-packages (from nltk) (2023.12.25)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from nltk) (4.66.2)\n"]}],"source":["!pip install nltk"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"pF2BqaVGmrNB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708450902485,"user_tz":-330,"elapsed":2063,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"a4f83f87-983f-4fcd-f43e-b6359b82fdfa"},"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Unzipping tokenizers/punkt.zip.\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":2}],"source":["import nltk\n","nltk.download('punkt')"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"Pdo3kYCDmOhh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708450918111,"user_tz":-330,"elapsed":496,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"54e6465b-4779-4921-c001-85daf2d58fa1"},"outputs":[{"output_type":"stream","name":"stdout","text":["['Hello Amey , how are you doing today?', 'The weather is great, and breeze is awesome.The sky is yellowish-pink.', 'We should play an outdoor game, go and get some players.']\n"]}],"source":["#Sentence Tokenization\n","from nltk.tokenize import sent_tokenize\n","text=\"\"\"Hello Amey , how are you doing today? The weather is great, and breeze is awesome.The sky is yellowish-pink. We should play an outdoor game, go and get some players.\"\"\"\n","\n","tokenized_text=sent_tokenize(text)\n","print(tokenized_text)"]},{"cell_type":"code","execution_count":4,"metadata":{"id":"dGxPOhW6ni0n","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708450922964,"user_tz":-330,"elapsed":8,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"ef5fc37a-90e7-4b64-d037-3b07acd2ec50"},"outputs":[{"output_type":"stream","name":"stdout","text":["['Hello', 'Amey', ',', 'how', 'are', 'you', 'doing', 'today', '?', 'The', 'weather', 'is', 'great', ',', 'and', 'breeze', 'is', 'awesome.The', 'sky', 'is', 'yellowish-pink', '.', 'We', 'should', 'play', 'an', 'outdoor', 'game', ',', 'go', 'and', 'get', 'some', 'players', '.']\n"]}],"source":["#Word Tokenization\n","from nltk.tokenize import word_tokenize\n","\n","tokenized_word= word_tokenize(text)\n","\n","print(tokenized_word)"]},{"cell_type":"code","execution_count":5,"metadata":{"id":"-TUFw9v4mOqV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708450938113,"user_tz":-330,"elapsed":553,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"9c52b901-3ee9-4afc-ba9f-0c130b8952d9"},"outputs":[{"output_type":"stream","name":"stdout","text":["[(',', 3), ('is', 3)]\n"]}],"source":["# frequency plot\n","\n","from nltk.probability import FreqDist\n","\n","fdist = FreqDist(tokenized_word)\n","print(fdist.most_common(2))"]},{"cell_type":"code","execution_count":6,"metadata":{"id":"_rHASe_6mOxf","colab":{"base_uri":"https://localhost:8080/","height":534},"executionInfo":{"status":"ok","timestamp":1708450943945,"user_tz":-330,"elapsed":857,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"873b3955-1d0e-4025-ff29-863de4ca75e7"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# Frequency Distribution Plot\n","import matplotlib.pyplot as plt\n","\n","fdist.plot(30,cumulative=False)\n","plt.show()"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"HVXMM2EgmO4v","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708450949894,"user_tz":-330,"elapsed":528,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"72a92907-c571-41d2-9424-3ab44dc38ea8"},"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":7}],"source":["#Remove stopwords & punctuations\n","nltk.download('stopwords')"]},{"cell_type":"code","source":["from nltk.corpus import stopwords\n","\n","stop_words= set(stopwords.words('english'))\n","print(stop_words)"],"metadata":{"id":"R07zUVbNuL9Y","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708450954388,"user_tz":-330,"elapsed":719,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"b4d333d1-52c7-43eb-dbb5-e5f37b6b7063"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["{'our', 'don', \"it's\", \"hadn't\", 'mightn', 'ain', 'i', 'themselves', 'had', 'having', 'have', 'between', 'was', 'at', 'ours', 'no', 'doesn', 'its', \"haven't\", 'does', 'further', 'each', 'out', 'hadn', 'to', \"mustn't\", 'once', 'there', 'again', 'any', 'down', 'am', 'yourself', 'me', 'is', 'these', 'she', 'about', 'only', 'into', 'weren', 'very', 'mustn', 'where', 'ourselves', 'yours', 've', 'couldn', 'my', 'all', 'won', 'who', 'other', 'do', 'if', 'it', 'itself', 'shan', 'after', 'him', 'same', \"wasn't\", 'during', \"mightn't\", 'isn', 'should', 'are', 'o', 'they', 'theirs', 'been', 'that', 'just', 'and', 'myself', 'or', 'which', 'a', \"don't\", 'over', 'those', 'aren', 'until', 'how', 'the', \"you'll\", 'll', 're', 'hasn', 'he', 'were', 'be', 'them', 'what', 'doing', 'for', \"doesn't\", 'his', 'yourselves', 'from', 'in', 'this', 'by', 'now', \"you've\", 'both', 'own', 'herself', 'm', 'her', \"she's\", 'has', 'below', 'haven', 't', 'will', 'shouldn', 'himself', 'of', 'off', \"weren't\", 'y', 'whom', 'nor', 'being', 'with', 'here', \"shouldn't\", 'too', 'can', 'while', 'wasn', 'than', 'some', 'did', \"needn't\", 'their', 'an', 'under', 'against', \"didn't\", 'above', 's', 'why', \"isn't\", 'most', \"shan't\", 'ma', 'you', 'didn', 'few', \"couldn't\", 'but', \"should've\", 'on', \"aren't\", 'because', 'before', 'hers', 'such', 'wouldn', 'so', 'needn', 'up', 'more', 'then', \"you're\", 'when', 'we', \"you'd\", 'not', \"hasn't\", \"won't\", 'd', 'through', 'your', 'as', \"that'll\", \"wouldn't\"}\n"]}]},{"cell_type":"code","execution_count":9,"metadata":{"id":"gAZ8hZXgmPUe","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708450959929,"user_tz":-330,"elapsed":893,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"f2f7abb0-c677-4888-b3fd-53771ffb3e41"},"outputs":[{"output_type":"stream","name":"stdout","text":["Tokenized Words: ['Hello', 'Amey', ',', 'how', 'are', 'you', 'doing', 'today', '?', 'The', 'weather', 'is', 'great', ',', 'and', 'breeze', 'is', 'awesome.The', 'sky', 'is', 'yellowish-pink', '.', 'We', 'should', 'play', 'an', 'outdoor', 'game', ',', 'go', 'and', 'get', 'some', 'players', '.']\n","Filtered Tokens: ['Hello', 'Amey', ',', 'today', '?', 'The', 'weather', 'great', ',', 'breeze', 'awesome.The', 'sky', 'yellowish-pink', '.', 'We', 'play', 'outdoor', 'game', ',', 'go', 'get', 'players', '.']\n"]}],"source":["filtered_tokens=[]\n","for word in tokenized_word:\n","    if word not in stop_words:\n","         filtered_tokens.append(word)\n","\n","print(\"Tokenized Words:\",tokenized_word)\n","print(\"Filtered Tokens:\",filtered_tokens)"]},{"cell_type":"code","execution_count":10,"metadata":{"id":"nkgtsFfPmPpp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708450969442,"user_tz":-330,"elapsed":633,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"bc288e87-36da-42d5-c73d-00c36d8d3170"},"outputs":[{"output_type":"stream","name":"stdout","text":["Filtered Tokens After Removing Punctuations: ['Hello', 'Amey', 'today', 'The', 'weather', 'great', 'breeze', 'awesome.The', 'sky', 'yellowish-pink', 'We', 'play', 'outdoor', 'game', 'go', 'get', 'players']\n"]}],"source":["import string\n","\n","# punctuations\n","punctuations=list(string.punctuation)\n","\n","filtered_tokens2=[]\n","\n","for i in filtered_tokens:\n","    if i not in punctuations:\n","        filtered_tokens2.append(i)\n","\n","print(\"Filtered Tokens After Removing Punctuations:\",filtered_tokens2)"]},{"cell_type":"code","execution_count":11,"metadata":{"id":"cZhUUkw-phoi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708450974358,"user_tz":-330,"elapsed":726,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"6c4d6d84-1ac7-4b30-f865-20ea71d6b460"},"outputs":[{"output_type":"stream","name":"stdout","text":["Filtered Tokens After Removing Punctuations: ['Hello', 'Amey', 'today', 'The', 'weather', 'great', 'breeze', 'awesome.The', 'sky', 'yellowish-pink', 'We', 'play', 'outdoor', 'game', 'go', 'get', 'players']\n","Stemmed Tokens: ['hello', 'amey', 'today', 'the', 'weather', 'great', 'breez', 'awesome.th', 'sky', 'yellowish-pink', 'we', 'play', 'outdoor', 'game', 'go', 'get', 'player']\n"]}],"source":["# Lexicon Normalization\n","\n","# Stemming\n","\n","from nltk.stem import PorterStemmer\n","from nltk.tokenize import sent_tokenize, word_tokenize\n","ps = PorterStemmer()\n","\n","stemmed_words=[]\n","\n","for word in filtered_tokens2:\n","     stemmed_words.append(ps.stem(word))\n","\n","print(\"Filtered Tokens After Removing Punctuations:\",filtered_tokens2)\n","print(\"Stemmed Tokens:\",stemmed_words)"]},{"cell_type":"code","execution_count":12,"metadata":{"id":"swsAxmXbpht3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708450980291,"user_tz":-330,"elapsed":2064,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"41eb1f58-15f8-4675-83f5-f07e75a0aae9"},"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package wordnet to /root/nltk_data...\n"]},{"output_type":"stream","name":"stdout","text":["Lemmatized Word: fly\n","Stemmed Word: fli\n"]}],"source":["# Lemmatization\n","nltk.download('wordnet')\n","\n","from nltk.stem.wordnet import WordNetLemmatizer\n","from nltk.stem.porter import PorterStemmer\n","\n","lem = WordNetLemmatizer()\n","stem = PorterStemmer()\n","word = \"flying\"\n","\n","print(\"Lemmatized Word:\",lem.lemmatize(word,\"v\"))\n","\n","print(\"Stemmed Word:\",stem.stem(word))"]},{"cell_type":"code","execution_count":13,"metadata":{"id":"ONSHkgZZphyO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708450987793,"user_tz":-330,"elapsed":8,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"f3938fd4-6103-4d1c-879a-a96ae3c2081d"},"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package averaged_perceptron_tagger to\n","[nltk_data]     /root/nltk_data...\n","[nltk_data]   Unzipping taggers/averaged_perceptron_tagger.zip.\n"]},{"output_type":"stream","name":"stdout","text":["Tokens: ['Kiyomi', 'is', 'a', 'Labrador', 'Retriever', '.', 'She', 'identifies', 'as', 'a', 'Dog', '.', 'She', 'is', 'white', 'and', 'Golden', 'coloured', '.']\n","PoS tags: [('Kiyomi', 'NNP'), ('is', 'VBZ'), ('a', 'DT'), ('Labrador', 'NNP'), ('Retriever', 'NNP'), ('.', '.'), ('She', 'PRP'), ('identifies', 'VBZ'), ('as', 'IN'), ('a', 'DT'), ('Dog', 'NNP'), ('.', '.'), ('She', 'PRP'), ('is', 'VBZ'), ('white', 'JJ'), ('and', 'CC'), ('Golden', 'NNP'), ('coloured', 'VBD'), ('.', '.')]\n"]}],"source":["#Part of Speech tagging\n","\n","nltk.download('averaged_perceptron_tagger')\n","from nltk.tokenize import word_tokenize\n","from nltk import pos_tag\n","\n","sent = \"Kiyomi is a Labrador Retriever. She identifies as a Dog. She is white and Golden coloured.\"\n","\n","tokens=word_tokenize(sent)\n","pos=pos_tag(tokens)\n","\n","print(\"Tokens:\",tokens)\n","print(\"PoS tags:\",pos)"]},{"cell_type":"code","execution_count":14,"metadata":{"id":"WbdXe5letCcX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708450995520,"user_tz":-330,"elapsed":1426,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"962eb256-843e-4773-fc9e-9447729b3d37"},"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package maxent_ne_chunker to\n","[nltk_data]     /root/nltk_data...\n","[nltk_data]   Unzipping chunkers/maxent_ne_chunker.zip.\n","[nltk_data] Downloading package words to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/words.zip.\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":14}],"source":["nltk.download('maxent_ne_chunker')\n","nltk.download('words')"]},{"cell_type":"code","execution_count":15,"metadata":{"id":"mhQxt7bSph1i","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708451000265,"user_tz":-330,"elapsed":560,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"fc424909-03d2-4329-e092-cec5b27346af"},"outputs":[{"output_type":"stream","name":"stdout","text":["PERSON Trinamool\n","ORGANIZATION Congress\n","PERSON Mahua Moitra\n","ORGANIZATION Supreme Court\n","ORGANIZATION Lok Sabha\n","PERSON Moitra\n","ORGANIZATION Parliament\n","ORGANIZATION Ethics Committee\n","ORGANIZATION Lok Sabha\n","PERSON Darshan Hiranandani\n"]}],"source":["# Named Entity Recognization\n","\n","from nltk import ne_chunk\n","\n","sent=\"Trinamool Congress leader Mahua Moitra has moved the Supreme Court against her expulsion from the Lok Sabha over the cash-for-query allegations against her. Moitra was ousted from the Parliament last week after the Ethics Committee of the Lok Sabha found her guilty of jeopardising national security by sharing her parliamentary portal's login credentials with businessman Darshan Hiranandani.\"\n","tok_w=word_tokenize(sent)\n","pos_w = nltk.pos_tag(tok_w)\n","for chunk in ne_chunk(pos_w):\n","        if hasattr(chunk, 'label'):\n","            print(chunk.label(), ' '.join(c[0] for c in chunk))"]},{"cell_type":"code","execution_count":16,"metadata":{"id":"8Jo8o6uBuZvZ","executionInfo":{"status":"ok","timestamp":1708451007716,"user_tz":-330,"elapsed":491,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}}},"outputs":[],"source":["# scraping data from website\n","import requests\n","from bs4 import BeautifulSoup\n","\n","# Fetch the HTML content\n","url = 'https://www.bbc.com/news'\n","response = requests.get(url)\n","html_content = response.text\n","\n","# Parse the HTML\n","soup = BeautifulSoup(html_content, 'lxml')\n","\n","# Extract the desired data (e.g., titles, prices, etc.)\n","# Example: Extract all the titles of articles\n","titles = [title.text for title in soup.find_all('h2')]"]},{"cell_type":"code","execution_count":17,"metadata":{"id":"LTeT79QyupmR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708451012915,"user_tz":-330,"elapsed":540,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"19bde453-f83e-4b2c-c8d0-572cdd13e037"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Alexei Navalny',\n"," 'Features & analysis',\n"," 'Most watched',\n"," 'Also in news',\n"," 'Israel-Gaza war']"]},"metadata":{},"execution_count":17}],"source":["titles[:5]"]},{"cell_type":"markdown","metadata":{"id":"ELUnqhySjRB3"},"source":["**2.Explore Top-5 Text Analytics Libraries in R (w.r.t Features & Applications)**\n","\n","---\n"]},{"cell_type":"markdown","metadata":{"id":"90LsgKJLjwXI"},"source":["**tm (Text Mining Infrastructure in R):**\n","\n",">The tm package provides a framework for text mining applications in R.\n","It offers functionalities for text preprocessing, including tokenization, stemming, stop-word removal, and term-document matrix creation.\n","tm supports various text mining algorithms such as term frequency-inverse document frequency (TF-IDF), latent semantic analysis (LSA), and topic modeling with algorithms like Latent Dirichlet Allocation (LDA).\n","\n","**quanteda:**\n","\n",">quanteda is a powerful and user-friendly text analysis package in R.\n","It provides a streamlined approach for text corpus management, tokenization, and feature engineering.\n","quanteda offers a wide range of text analysis methods, including document-feature matrices, n-gram analysis, and sentiment analysis.\n","It supports advanced techniques such as network analysis and word embeddings.\n","\n","**tidytext:**\n","\n",">The tidytext package integrates text mining capabilities into the tidyverse ecosystem in R.\n","It leverages the principles of tidy data for text analysis, making it easy to combine with other tidyverse packages like dplyr and ggplot2.\n","tidytext provides functions for tokenization, term frequency calculations, and sentiment analysis.\n","It enables seamless integration of text data with statistical modeling and visualization workflows.\n","\n","**text2vec:**\n","\n",">text2vec is a high-performance package for text analysis and machine learning with large datasets.\n","It offers efficient implementations of text processing tasks such as tokenization, word embeddings, and text vectorization.\n","text2vec provides tools for training word embeddings using algorithms like word2vec and GloVe.\n","It supports scalable text vectorization techniques such as global VSM and locality-sensitive hashing (LSH).\n","\n","**RWeka:**\n","\n",">R interface to the WEKA machine learning toolkit, providing access to a wide range of classifiers, feature selection methods, and evaluation metrics.\n","Can be used for text classification, clustering, and other machine learning tasks related to text analytics within the Shiny framework."]},{"cell_type":"markdown","metadata":{"id":"vflRxkc1lLnI"},"source":["**R:**\n","\n","---"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"L0clLY9WvO-N","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708451117442,"user_tz":-330,"elapsed":69300,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"79694bfe-29b5-43b8-8891-c0edb58a9ca9"},"outputs":[{"output_type":"stream","name":"stderr","text":["Installing package into ‘/usr/local/lib/R/site-library’\n","(as ‘lib’ is unspecified)\n","\n","also installing the dependencies ‘Rcpp’, ‘SnowballC’\n","\n","\n"]}],"source":["# Install and load the 'tokenizers' package\n","install.packages(\"tokenizers\")\n","library(tokenizers)"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"t31yz1ecviSP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708451146183,"user_tz":-330,"elapsed":621,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"9d9c62a4-0201-4441-cf24-21449e20a618"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[1]]\n"," [1] \"puppies\"       \"with\"          \"their\"         \"boundless\"    \n"," [5] \"energy\"        \"innocent\"      \"curiosity\"     \"and\"          \n"," [9] \"endearing\"     \"clumsiness\"    \"never\"         \"fail\"         \n","[13] \"to\"            \"capture\"       \"our\"           \"hearts\"       \n","[17] \"these\"         \"fluffy\"        \"bundles\"       \"of\"           \n","[21] \"joy\"           \"exude\"         \"pure\"          \"happiness\"    \n","[25] \"and\"           \"contagious\"    \"enthusiasm\"    \"as\"           \n","[29] \"they\"          \"explore\"       \"the\"           \"world\"        \n","[33] \"around\"        \"them\"          \"with\"          \"wide\"         \n","[37] \"eyed\"          \"wonder\"        \"from\"          \"their\"        \n","[41] \"playful\"       \"antics\"        \"to\"            \"their\"        \n","[45] \"affectionate\"  \"snuggles\"      \"puppies\"       \"possess\"      \n","[49] \"an\"            \"irresistible\"  \"charm\"         \"that\"         \n","[53] \"brightens\"     \"even\"          \"the\"           \"gloomiest\"    \n","[57] \"of\"            \"days\"          \"with\"          \"their\"        \n","[61] \"loyal\"         \"companionship\" \"and\"           \"unwavering\"   \n","[65] \"love\"          \"puppies\"       \"bring\"         \"warmth\"       \n","[69] \"and\"           \"laughter\"      \"into\"          \"our\"          \n","[73] \"lives\"         \"leaving\"       \"an\"            \"indelible\"    \n","[77] \"mark\"          \"on\"            \"our\"           \"hearts\"       \n","[81] \"forever\"      \n","\n"]}],"source":["#tokenize words\n","\n","text <- \"Puppies, with their boundless energy, innocent curiosity, and endearing clumsiness, never fail to capture our hearts.\n","These fluffy bundles of joy exude pure happiness and contagious enthusiasm as they explore the world around them with wide-eyed wonder.\n","From their playful antics to their affectionate snuggles, puppies possess an irresistible charm that brightens even the gloomiest of days.\n","With their loyal companionship and unwavering love, puppies bring warmth and laughter into our lives, leaving an indelible mark on our hearts forever.\"\n","\n","# Tokenize the text into words\n","word_tokens <- tokenize_words(text)\n","\n","# Print the result\n","print(word_tokens)"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"bnXZZ-v2vSP6","colab":{"base_uri":"https://localhost:8080/","height":114},"executionInfo":{"status":"ok","timestamp":1708451151920,"user_tz":-330,"elapsed":717,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"bac3bac8-5092-410a-d335-46ab309749e4"},"outputs":[{"output_type":"display_data","data":{"text/html":["<ol>\n","\t<li><style>\n",".list-inline {list-style: none; margin:0; padding: 0}\n",".list-inline>li {display: inline-block}\n",".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n","</style>\n","<ol class=list-inline><li>'Puppies, with their boundless energy, innocent curiosity, and endearing clumsiness, never fail to capture our hearts.'</li><li>'These fluffy bundles of joy exude pure happiness and contagious enthusiasm as they explore the world around them with wide-eyed wonder.'</li><li>'From their playful antics to their affectionate snuggles, puppies possess an irresistible charm that brightens even the gloomiest of days.'</li><li>'With their loyal companionship and unwavering love, puppies bring warmth and laughter into our lives, leaving an indelible mark on our hearts forever.'</li></ol>\n","</li>\n","</ol>\n"],"text/markdown":"1. 1. 'Puppies, with their boundless energy, innocent curiosity, and endearing clumsiness, never fail to capture our hearts.'\n2. 'These fluffy bundles of joy exude pure happiness and contagious enthusiasm as they explore the world around them with wide-eyed wonder.'\n3. 'From their playful antics to their affectionate snuggles, puppies possess an irresistible charm that brightens even the gloomiest of days.'\n4. 'With their loyal companionship and unwavering love, puppies bring warmth and laughter into our lives, leaving an indelible mark on our hearts forever.'\n\n\n\n\n\n","text/latex":"\\begin{enumerate}\n\\item \\begin{enumerate*}\n\\item 'Puppies, with their boundless energy, innocent curiosity, and endearing clumsiness, never fail to capture our hearts.'\n\\item 'These fluffy bundles of joy exude pure happiness and contagious enthusiasm as they explore the world around them with wide-eyed wonder.'\n\\item 'From their playful antics to their affectionate snuggles, puppies possess an irresistible charm that brightens even the gloomiest of days.'\n\\item 'With their loyal companionship and unwavering love, puppies bring warmth and laughter into our lives, leaving an indelible mark on our hearts forever.'\n\\end{enumerate*}\n\n\\end{enumerate}\n","text/plain":["[[1]]\n","[1] \"Puppies, with their boundless energy, innocent curiosity, and endearing clumsiness, never fail to capture our hearts.\"                                 \n","[2] \"These fluffy bundles of joy exude pure happiness and contagious enthusiasm as they explore the world around them with wide-eyed wonder.\"               \n","[3] \"From their playful antics to their affectionate snuggles, puppies possess an irresistible charm that brightens even the gloomiest of days.\"            \n","[4] \"With their loyal companionship and unwavering love, puppies bring warmth and laughter into our lives, leaving an indelible mark on our hearts forever.\"\n"]},"metadata":{}}],"source":["#tokenize sentences\n","tokenize_sentences(text)"]},{"cell_type":"code","execution_count":4,"metadata":{"id":"W2NLIHbrvSl5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708451227197,"user_tz":-330,"elapsed":71953,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"59a40ed1-b324-4e88-87c7-4a9dce85d096"},"outputs":[{"output_type":"stream","name":"stderr","text":["Installing package into ‘/usr/local/lib/R/site-library’\n","(as ‘lib’ is unspecified)\n","\n","Installing package into ‘/usr/local/lib/R/site-library’\n","(as ‘lib’ is unspecified)\n","\n","also installing the dependency ‘janeaustenr’\n","\n","\n","Installing package into ‘/usr/local/lib/R/site-library’\n","(as ‘lib’ is unspecified)\n","\n","also installing the dependencies ‘NLP’, ‘slam’, ‘BH’\n","\n","\n","── \u001b[1mAttaching core tidyverse packages\u001b[22m ──────────────────────── tidyverse 2.0.0 ──\n","\u001b[32m✔\u001b[39m \u001b[34mdplyr    \u001b[39m 1.1.4     \u001b[32m✔\u001b[39m \u001b[34mreadr    \u001b[39m 2.1.5\n","\u001b[32m✔\u001b[39m \u001b[34mforcats  \u001b[39m 1.0.0     \u001b[32m✔\u001b[39m \u001b[34mstringr  \u001b[39m 1.5.1\n","\u001b[32m✔\u001b[39m \u001b[34mggplot2  \u001b[39m 3.4.4     \u001b[32m✔\u001b[39m \u001b[34mtibble   \u001b[39m 3.2.1\n","\u001b[32m✔\u001b[39m \u001b[34mlubridate\u001b[39m 1.9.3     \u001b[32m✔\u001b[39m \u001b[34mtidyr    \u001b[39m 1.3.1\n","\u001b[32m✔\u001b[39m \u001b[34mpurrr    \u001b[39m 1.0.2     \n","── \u001b[1mConflicts\u001b[22m ────────────────────────────────────────── tidyverse_conflicts() ──\n","\u001b[31m✖\u001b[39m \u001b[34mdplyr\u001b[39m::\u001b[32mfilter()\u001b[39m masks \u001b[34mstats\u001b[39m::filter()\n","\u001b[31m✖\u001b[39m \u001b[34mdplyr\u001b[39m::\u001b[32mlag()\u001b[39m    masks \u001b[34mstats\u001b[39m::lag()\n","\u001b[36mℹ\u001b[39m Use the conflicted package (\u001b[3m\u001b[34m<http://conflicted.r-lib.org/>\u001b[39m\u001b[23m) to force all conflicts to become errors\n","Loading required package: NLP\n","\n","\n","Attaching package: ‘NLP’\n","\n","\n","The following object is masked from ‘package:ggplot2’:\n","\n","    annotate\n","\n","\n"]}],"source":["install.packages(\"tidyverse\")\n","install.packages(\"tidytext\")\n","install.packages(\"tm\")\n","library(tidyverse)\n","library(tidytext)\n","library(tm)"]},{"cell_type":"code","execution_count":5,"metadata":{"id":"MhgbPY1_vSyo","colab":{"base_uri":"https://localhost:8080/","height":437},"executionInfo":{"status":"ok","timestamp":1708451249241,"user_tz":-330,"elapsed":1275,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"42a0aec6-5eb7-49d3-af24-9b83ca88c698"},"outputs":[{"output_type":"display_data","data":{"text/plain":["plot without title"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAA0gAAANICAMAAADKOT/pAAAC/VBMVEUAAAABAQECAgIDAwME\nBAQFBQUGBgYHBwcICAgJCQkKCgoLCwsMDAwNDQ0ODg4PDw8QEBARERESEhITExMUFBQVFRUW\nFhYXFxcYGBgZGRkaGhobGxscHBwdHR0eHh4fHx8gICAhISEiIiIjIyMkJCQmJiYnJycoKCgp\nKSkqKiorKyssLCwtLS0uLi4vLy8wMDAxMTEyMjIzMzM0NDQ1NTU2NjY3Nzc4ODg5OTk6Ojo7\nOzs8PDw9PT0+Pj4/Pz9AQEBBQUFCQkJDQ0NERERFRUVGRkZHR0dISEhJSUlKSkpLS0tMTExN\nTU1OTk5PT09QUFBRUVFSUlJTU1NUVFRVVVVWVlZXV1dYWFhZWVlaWlpbW1tcXFxdXV1eXl5f\nX19gYGBhYWFiYmJjY2NkZGRlZWVmZmZnZ2doaGhpaWlqampra2tsbGxtbW1ubm5vb29wcHBx\ncXFycnJzc3N0dHR1dXV2dnZ3d3d4eHh5eXl6enp7e3t8fHx9fX1+fn5/f3+AgICBgYGCgoKD\ng4OEhISFhYWGhoaHh4eIiIiJiYmKioqLi4uMjIyNjY2Ojo6Pj4+QkJCRkZGSkpKTk5OUlJSV\nlZWWlpaXl5eYmJiZmZmampqbm5ucnJydnZ2enp6fn5+goKChoaGioqKjo6OkpKSlpaWmpqan\np6eoqKipqamqqqqrq6usrKytra2urq6vr6+wsLCxsbGysrKzs7O0tLS1tbW2tra3t7e4uLi5\nubm6urq7u7u8vLy9vb2+vr6/v7/AwMDBwcHCwsLDw8PExMTFxcXGxsbHx8fIyMjJycnKysrL\ny8vMzMzNzc3Ozs7Pz8/Q0NDR0dHS0tLT09PU1NTV1dXW1tbX19fY2NjZ2dna2trb29vc3Nzd\n3d3e3t7f39/g4ODh4eHi4uLj4+Pk5OTl5eXm5ubn5+fo6Ojp6enq6urr6+vs7Ozt7e3u7u7v\n7+/w8PDx8fHy8vLz8/P09PT19fX29vb39/f4+Pj5+fn6+vr7+/v8/Pz9/f3+/v7///8TNFiS\nAAAACXBIWXMAABJ0AAASdAHeZh94AAAgAElEQVR4nO2deZwU5Z3/S+OReCSbzZ3Nbn57ZhNz\n7E42ickmuxv3l01+2RkuEQUdQMVwqKhgPMDgiUYl6EQxikZRQVSMiogcImpUxCPiEVEUxBFm\n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\nbgAJIAEkgFTCDSABJMMNICkBJIBUmRtAIgEkgOTuBpBIAAkgubsBJBJAAkjubgCJBJAAkrsb\nQCIBJIDk7gaQSAAJILm7ASQSQAJI7m4AiQSQAJK7G0AiASSA5O4GkEgACSC5uwEkEkACSO5u\nAIkEkACSuxtAIgEkgOTuBpBIAAkgubsBJBJAAkjubgCJBJAAkrsbQCIBJIDk7gaQSAAJILm7\nASQSQAJI7m4AiQSQAJK7WwpAktpS9zyl2+oe0h8smK/TK+v0o/pfrnuD0jvqHtdB1y/W6fvq\n9I9kPF23ndKb614w3JYZbjebbs2G25uG2xM66Lq7dXqJ4faU4fZ23YuG28N6g1tv0ekVhtsG\nw+190+23htu9htsf6xoo/Zbh1mq6/d5we6QuQ+mX6jZRutF0q7tHp++po4e1W26b6v5E6Za6\n5Ybb73V6eV0Lpf9U9xalG+r+SOl83b16g7t/q9NP1DVS+s26lyidqXtEB91yq04/XNdK6Rfr\n3qb09rqnKN1juV1nur1vuNHPSrLmuhWG222mW5vhttlwe9pwWxLt9nid/i3lN+teZracQHqi\nSh/m3VVn6g+G/LdOX1BVr/NTpevI61W/1kHfG6PTE6o6KV1XpSvY2qpbKb2rapreoPr/6vSM\nqm2UvqtKH7U/V12pg75zgk6fXNVF6WurdAVbU7WA0jurpusN/vd/dPq8Kk3eoip91F6tuloH\n/VutTp9YpUGaW6UP+aNVt1N6R9XZeoP/9zOdPrdK186FVSsp/UrVHB1UNU6nx1dpkH5TpQ/5\nqqo7Kf1+1Tl6g58Zbr+s0vXljqrVlH656jeU7qkarzcY+22dnlP1CqVXVi2kdEPVeTropz/X\n6bMNtwVVayj9UtU1htuJeoMT/k2nr6qin0lhK6oWUXp71fk66CfVOj29aielb6t6jNIvVl1L\n6a6qkw237+j0r6v+TOnlVUYLIASQGEACSAApEEACSJQGSJQGSADJcBusIEEQZAsgQVAMAkgQ\nFIPiBOm9i1oq/GCQydrPxtzAZSQmlbUL21eXjhkMhWEqokLHCdKOk86IBqboB4NM5n7mp85I\ne+Upaxe6T1oa0zelSBEVOtauXYwkZa/rD/SyN5ThViyoDOn9bMzV15qVx/zSnku3Rm28YEd2\nR9T7RVXeBsWcyyhhexdY1lhsQF+UqVmbfTJ6c8Mt9E2Vqfh+FilJW2Ud9HJkuBVWaCeQuu6b\n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\nxBBdkjOm5SoqOjGjay5VMJ/q2hl5l4LdjoZ+N9WWupGl306KhoKFujTwp6k1Pc2gpdeSyEcZ\nSomTivpBm17o3+dzC5EK82yfMCJX2senvk1juyoAiTdH4jFSfV6cpdf80BqZ0LRc2dKPWZQr\nD4w7CIvepWAo/LupJLk6Rd7/77KLlUou1D369JZmeQ9siQXIejZGMyWuMdEP2vRC0r6eW4hW\nmKTCE0bkSvsY5B/b86/qwzS2qwKQeHO0QjxGqo/XT8w1P7RGJjQtV7asB5balxuL3aVgyPzl\nT+sDtTql0oUbzpILdY+vOb1N3QNb9t1BmikxH04/aLMv2tE+KarTaijiVsSYJI7tK+7T2K6i\nrp3fHMmfV+vr9RNzzQ+tkQlNy1XyZTlz5YG+3Nj7A2SFzN9NNaRXp1S4cMNZcqHu/GOHXtzb\nE2tLScyHqx+0iTuH8Suq06oVuhUxNtGxdZ7GdhWBJBYsy6vxfbx+El7zI9/sdVouWnzpHD2w\nVC4iVncQ+h+UcQ98keFe/69OKZBcqPvn0dVz+uBcZD4cMqSPres0tqsIJLlg2VrX4qrQmh+p\nyuuOXDonH1j6tnoYgLyDUHxQ+h74IsO9/l+dUiD1E2YvVI/pizNIKqkBOLZKxvR3PkaS3CYX\nbKmlc2LcSg8D4H0i9UHpuxgLh3vmoxr2xYVYklyoe3XfnAvnwyFDcgXMvj+2QhIkeaFTkXRP\niU3KkOvkgqVg6Ryf0bUWEQcflL6LMTzcsx7VsI8lFur20dmcD4fCMn+xe59LgBTckitJiuNr\nXScXTNHSuebQAq4K1qaHhnvWo9T3seRC3T6TlITLRElVwwCSJECiC52xNEdCLpMLIa03nnnS\nbS7gcl2bHn6U+oCoj85l36/8YZO5AmYgjq0ASV/ojG9JRQxTYtYzT8wFXM5r0/U83sB1kNA1\n6xcVeVjHPpMAqeTTJwdI1jNPzAVcrmvT43mmDpRAFXv2xr6SmrUr8fTJgZL5zJNOc9mJ69r0\nffxMHWjfqcizN/aVFEgOj4beNzKeedITx9LmffxMHWjfqV+f7FVSCiSXR0PvA2XtX2AssYCr\nLO3jZ+pA+079+WSvkgouyA74fZWRsn6Pi5VawAV9yNVfT/YqR2X9GPOAyf49LghKrJINkvHM\nEwhKshIMkvo99XP39fJDCKpcyQXJ/mU7CEq0kguS/mW71QOdFQgqpeSCRPeSY00NlHwlF6Qy\n7iWHoKQomSCVeS85BCVFiQSp3HvJISgpSiRIZd9LDkEJUSJBKv9ecghKhhIJkuPvnEHQgCmR\nILnfSw5BA6NEguR+LzkEDYySCZLzveQQNDBKKEgx/M4ZBO1DJRUkCEqVABIExSCABEExCCBB\nUAwCSBAUgwASBMUggARBMQggQVAMAkhJ1nc/Jpa/L/PGi3+H7tcYHTfq0H2WJShaACnJusgT\nP8091fsSf+n+i38tEgeQBlwAKcl6zpvOX756pLfRf1nnzSgSB5AGXAApycp/5hv+3+3e7QfW\n+a8Xe08xtvyHh330a3PyjP3ghw996UiWv+hLBx9xLwep4eS/OfhzwzcOdJY/rAJIidbxnj8q\nus1r/H61/8+PPtnN7t/vpw88epZ3NmM//sZXrl/Gfu2NWX33Ef/kg/S9z9/82MKvfxZrfQdG\nACnRWuTdztjor7ELDu9kLQeOYuwrf8N/lWbogbvYUd4f/Cbri0f4/zYceChr9s71U2/P3j7A\nOf6wCiAlWrv2H8Pyn5vKnvCeZMu82/xenrht+BZvGTvqoE7G3vVO5/8feSjr/NSXH8WTywZO\nACnZ+t7n8ht8ajoPvYBN3e999px3CX93uXcTO+qLfmK9/H+E37V76m+9T41YmMRfXfxQCCAl\nWxd5G64+sIWxnx3JvvavjD3vXcTffdi7mR31ZT/xrARpKJ+1614z/avet9sHMrcfYgGkZOt5\n75r//Xf/dc6Bm72ZjDV6p/B3b/JWSJA2e1P4/98Kpr/n+d0/aCAEkJKt/GdHfpo3Qi97p3tP\n+69HfJGvdfjpIc0SpJ5P/70/MHpzv0PZC6N2+P+/7V01oNn98AogJVwnHCoAyn/usE92+68P\n7/+TBx+Z5F3OJEjsAm/4fTd8uepQ1nj4N25Zvfj7Hx+4X1H9cAsgJVyLvI+LCYTjvFHi/1X/\nfujB//J7FoDUfe7nD/r6/ace5LdZwz574BeH/WngcvrhFkCCoBgEkCAoBgEkCIpBAAmCYhBA\ngqAYBJAgKAYBJAiKQQAJgmIQQIKgGASQICgGASQIikEACYJi0P8HXmZBQTRrfFsAAAAASUVO\nRK5CYII="},"metadata":{"image/png":{"width":420,"height":420}}}],"source":["# Create a data frame with text data\n","df <- data.frame(text = text)\n","\n","# Tokenize the text\n","tokens <- df %>%\n","  unnest_tokens(word, text)\n","\n","# Count word frequency\n","word_freq <- tokens %>%\n","  count(word, sort = TRUE)\n","\n","# Plot barplot\n","ggplot(word_freq, aes(x = word, y = n)) +\n","  geom_bar(stat = \"identity\") +\n","  labs(title = \"Word Frequency\", x = \"Words\", y = \"Frequency\") +\n","  theme(axis.text.x = element_text(angle = 45, hjust = 1))"]},{"cell_type":"code","execution_count":6,"metadata":{"id":"qaWjIIQJvS-5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708451255136,"user_tz":-330,"elapsed":586,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"d70e8074-e4c4-47f5-9f5d-cf7ecb850c0e"},"outputs":[{"output_type":"stream","name":"stderr","text":["\u001b[1m\u001b[22mJoining with `by = join_by(word)`\n"]},{"output_type":"stream","name":"stdout","text":["            word\n","1        puppies\n","2      boundless\n","3         energy\n","4       innocent\n","5      curiosity\n","6      endearing\n","7     clumsiness\n","8           fail\n","9        capture\n","10        hearts\n","11        fluffy\n","12       bundles\n","13           joy\n","14         exude\n","15          pure\n","16     happiness\n","17    contagious\n","18    enthusiasm\n","19       explore\n","20         world\n","21          wide\n","22          eyed\n","23       playful\n","24        antics\n","25  affectionate\n","26      snuggles\n","27       puppies\n","28       possess\n","29  irresistible\n","30         charm\n","31     brightens\n","32     gloomiest\n","33          days\n","34         loyal\n","35 companionship\n","36    unwavering\n","37          love\n","38       puppies\n","39         bring\n","40        warmth\n","41      laughter\n","42         lives\n","43       leaving\n","44     indelible\n","45          mark\n","46        hearts\n","47       forever\n"]}],"source":["# Load the tidytext package\n","library(tidytext)\n","\n","# Create a data frame with text data\n","df <- data.frame(text = text)\n","\n","# Tokenize the text\n","tokens <- df %>%unnest_tokens(word, text)\n","\n","# Remove stopwords\n","tokens <- tokens %>%anti_join(stop_words)\n","\n","# Remove punctuations\n","tokens <- tokens %>%mutate(word = gsub(\"[[:punct:]]\", \"\", word))\n","\n","# View the cleaned tokens\n","print(tokens)"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"5UN5R2uSvTIw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708451657394,"user_tz":-330,"elapsed":7231,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"bf5fc072-344d-478e-c039-2969da812794"},"outputs":[{"output_type":"stream","name":"stderr","text":["Installing package into ‘/usr/local/lib/R/site-library’\n","(as ‘lib’ is unspecified)\n","\n"]}],"source":["install.packages(\"textstem\")"]},{"cell_type":"code","source":["library(textstem)"],"metadata":{"id":"A42CyNQUxvv5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708451667150,"user_tz":-330,"elapsed":1356,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"4e4b6c6b-b8a1-4de3-8e5d-c9ae666a1ac9"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stderr","text":["Loading required package: koRpus.lang.en\n","\n","Loading required package: koRpus\n","\n","Loading required package: sylly\n","\n","For information on available language packages for 'koRpus', run\n","\n","  available.koRpus.lang()\n","\n","and see ?install.koRpus.lang()\n","\n","\n","\n","Attaching package: ‘koRpus’\n","\n","\n","The following object is masked from ‘package:tm’:\n","\n","    readTagged\n","\n","\n","The following object is masked from ‘package:readr’:\n","\n","    tokenize\n","\n","\n"]}]},{"cell_type":"code","execution_count":10,"metadata":{"id":"omN8bUEcvTQX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708451673932,"user_tz":-330,"elapsed":519,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"5022180a-e665-4974-920f-af4fa8adad71"},"outputs":[{"output_type":"stream","name":"stdout","text":["[1] \"run\"   \"write\" \"play\" \n"]}],"source":["# Example text data\n","text <- c(\"running\",\n","          \"writes\",\n","          \"played\")\n","\n","# Lemmatize the text\n","lemmas <- lemmatize_words(text)\n","\n","# Print lemmatized text\n","print(lemmas)"]},{"cell_type":"code","execution_count":11,"metadata":{"id":"m0lQQcgc2ai-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708451689066,"user_tz":-330,"elapsed":7960,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"11a7ab24-b08c-4ab2-9a73-2d62c4f605a5"},"outputs":[{"output_type":"stream","name":"stderr","text":["Installing package into ‘/usr/local/lib/R/site-library’\n","(as ‘lib’ is unspecified)\n","\n"]}],"source":["# Install and load required packages\n","install.packages(\"SnowballC\")\n","\n","library(SnowballC)"]},{"cell_type":"code","source":["# Perform stemming\n","stemmed_text <- sapply(text, function(word) {\n","  stemmed_word <- wordStem(word, language = \"en\")\n","  return(stemmed_word)\n","})"],"metadata":{"id":"TbAwIOJ30Hzx","executionInfo":{"status":"ok","timestamp":1708451764203,"user_tz":-330,"elapsed":511,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["# Print the stemmed text\n","print(stemmed_text)"],"metadata":{"id":"p3qYejA40H34","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708451776240,"user_tz":-330,"elapsed":607,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"531d723f-5cf5-4929-c237-5e4823eb5836"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["running  writes  played \n","  \"run\" \"write\"  \"play\" \n"]}]},{"cell_type":"code","source":["install.packages(\"udpipe\")"],"metadata":{"id":"uaTPjC7bpVRk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708452191083,"user_tz":-330,"elapsed":128208,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"90622693-cc1a-406c-a4ad-724e48fdb993"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stderr","text":["Installing package into ‘/usr/local/lib/R/site-library’\n","(as ‘lib’ is unspecified)\n","\n"]}]},{"cell_type":"code","source":["library(udpipe)"],"metadata":{"id":"ZKM_gcpYpVvd","executionInfo":{"status":"ok","timestamp":1708452197945,"user_tz":-330,"elapsed":701,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["# Load pre-trained model for English\n","ud_model <- udpipe_download_model(language = \"english\")\n","ud_model <- udpipe_load_model(ud_model$file_model)"],"metadata":{"id":"LHeYUN8VpU_0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708452206484,"user_tz":-330,"elapsed":3834,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"db04d34b-7f09-4b6e-e113-16f76ab7657d"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stderr","text":["Downloading udpipe model from https://raw.githubusercontent.com/jwijffels/udpipe.models.ud.2.5/master/inst/udpipe-ud-2.5-191206/english-ewt-ud-2.5-191206.udpipe to /content/english-ewt-ud-2.5-191206.udpipe\n","\n"," - This model has been trained on version 2.5 of data from https://universaldependencies.org\n","\n"," - The model is distributed under the CC-BY-SA-NC license: https://creativecommons.org/licenses/by-nc-sa/4.0\n","\n"," - Visit https://github.com/jwijffels/udpipe.models.ud.2.5 for model license details.\n","\n"," - For a list of all models and their licenses (most models you can download with this package have either a CC-BY-SA or a CC-BY-SA-NC license) read the documentation at ?udpipe_download_model. For building your own models: visit the documentation by typing vignette('udpipe-train', package = 'udpipe')\n","\n","Downloading finished, model stored at '/content/english-ewt-ud-2.5-191206.udpipe'\n","\n"]}]},{"cell_type":"code","source":["# Sample text\n","text <- \"NLTK is a leading platform for building Python programs to work with human language data.\"\n","\n","# Tokenize and perform POS tagging\n","parsed_text <- udpipe_annotate(ud_model, x = text)\n","pos_tags <- as.data.frame(parsed_text)$upos\n","\n","# Print the POS tags\n","print(pos_tags)"],"metadata":{"id":"p_DTqhWYyE6D","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708452216996,"user_tz":-330,"elapsed":613,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"8d28fe73-2f9a-442b-aa23-373945cec461"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":[" [1] \"PROPN\" \"AUX\"   \"DET\"   \"VERB\"  \"NOUN\"  \"ADP\"   \"NOUN\"  \"NOUN\"  \"NOUN\" \n","[10] \"PART\"  \"VERB\"  \"ADP\"   \"ADJ\"   \"NOUN\"  \"NOUN\"  \"PUNCT\"\n"]}]},{"cell_type":"code","source":["# Define the text\n","text <- \"Barack Obama was born in Hawaii and became the 44th President of the United States.\"\n","\n","# Tokenize and annotate the text for NER\n","parsed_text <- udpipe_annotate(ud_model, x = text, trace = TRUE)\n","entities <- as.data.frame(parsed_text)$entity\n","\n","# Print the named entities\n","print(entities)"],"metadata":{"id":"3Nqq9JAPyEyr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708452224048,"user_tz":-330,"elapsed":711,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"5e34bfcc-7a2d-424c-da99-f8985b262a56"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["2024-02-20 18:03:46.532266 Annotating text fragment 1/1\n","NULL\n"]}]},{"cell_type":"code","source":["# Install and load required packages\n","install.packages(\"rvest\")"],"metadata":{"id":"rR1PZyRNyEwD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708452235207,"user_tz":-330,"elapsed":6061,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"62c4f512-c95f-475d-dd53-c647e380b586"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stderr","text":["Installing package into ‘/usr/local/lib/R/site-library’\n","(as ‘lib’ is unspecified)\n","\n"]}]},{"cell_type":"code","source":["library(rvest)"],"metadata":{"id":"fAyIQSwb1db5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708452241244,"user_tz":-330,"elapsed":610,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"cefd9d6d-6045-4a23-c321-52494eab3463"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stderr","text":["\n","Attaching package: ‘rvest’\n","\n","\n","The following object is masked from ‘package:readr’:\n","\n","    guess_encoding\n","\n","\n"]}]},{"cell_type":"code","source":["# URL of the website to scrape\n","url <- \"https://www.imdb.com/chart/top\"\n","\n","# Read the HTML content of the webpage\n","webpage <- read_html(url)\n","\n","# Extract movie titles\n","titles <- webpage %>%\n","  html_nodes(\".titleColumn a\") %>%\n","  html_text()\n","\n","# Extract movie ratings\n","ratings <- webpage %>%\n","  html_nodes(\".ratingColumn strong\") %>%\n","  html_text()\n","\n","# Create a data frame with titles and ratings\n","movies_df <- data.frame(Title = titles, Rating = ratings)\n","\n","# Print the data frame\n","print(movies_df)"],"metadata":{"id":"dnsNgwpf1j-h","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708452249261,"user_tz":-330,"elapsed":2371,"user":{"displayName":"ALOK KALE","userId":"04664759482087805469"}},"outputId":"a051df99-d779-47cb-dcdd-24c1b1dbb588"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["[1] Title  Rating\n","<0 rows> (or 0-length row.names)\n"]}]}],"metadata":{"colab":{"provenance":[{"file_id":"1M08sO2W9dqfuQ721Xv60J7wEeq7LfQY1","timestamp":1708450473316}]},"kernelspec":{"display_name":"R","name":"ir"},"language_info":{"name":"R"}},"nbformat":4,"nbformat_minor":0}